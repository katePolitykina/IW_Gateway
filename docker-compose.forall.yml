services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongo_data:/data/db
    networks:
      - iw_kafka_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - iw_kafka_net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - iw_kafka_net

  paymentservice:
    build:
      context: ../iW_Payment_Service
      dockerfile: Dockerfile
    container_name: iw-payment-service
    depends_on:
      - mongo
      - kafka
    environment:
      MONGO_URI: ${MONGO_URI}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - iw_kafka_net

  gateway:
    build:
      context: ../IW_Gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8084:8084"
    environment:
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_GW_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_GW_CLIENT_SECRET}
      KEYCLOAK_CLIENT_NAME: ${KEYCLOAK_GW_CLIENT_NAME}
      KEYCLOAK_ISSUER_URI: ${KEYCLOAK_ISSUER_URI}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTHENTICATION_SERVICE_URL: ${AUTHENTICATION_SERVICE_URL}
      ORDER_SERVICE_URL: ${ORDER_SERVICE_URL}
    depends_on:
      - userservice
      - orderservice
      - authservice
    networks:
      - gateway_net
      - keycloak_net

  authservice:
    build:
      context: ../IW_Authentication_Service
      dockerfile: Dockerfile
    container_name: authservice
    environment:
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_AS_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_AS_CLIENT_SECRET}
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
      KEYCLOAK_ISSUER_URI: ${KEYCLOAK_ISSUER_URI}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
    depends_on:
      - userservice
    networks:
      - keycloak_net
      - gateway_net

  userservice:
    build:
      context: ../IW_User_Service
      dockerfile: Dockerfile
    container_name: userservice
    environment:
      SPRING_APPLICATION_NAME: UserService
      SPRING_DATASOURCE_URL: ${US_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${US_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${US_DB_PASSWORD}
      SPRING_LIQUIBASE_ENABLED: "true"
      SPRING_CACHE_TYPE: redis
      SPRING_DATA_REDIS_HOST: userservice_redis
      SPRING_DATA_REDIS_PORT: 6379
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
    depends_on:
      - userservice_db
      - userservice_redis
    networks:
      - userservice_net
      - gateway_net
  userservice_db:
    image: postgres:latest
    container_name: userservice_db
    environment:
      POSTGRES_DB: innowisedb
      POSTGRES_USER: ${US_DB_USERNAME}
      POSTGRES_PASSWORD: ${US_DB_PASSWORD}
    volumes:
      - iw_user_service_db_data:/var/lib/postgresql/data
    networks:
      - userservice_net

  userservice_redis:
    image: redis:latest
    container_name: userservice_redis
    networks:
      - userservice_net

  orderservice:
    build:
      context: ../iw_order_service
      dockerfile: Dockerfile
    container_name: orderservice
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://orderservice_db:5432/${OS_DB_NAME}"
      SPRING_DATASOURCE_USERNAME: ${OS_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${OS_DB_PASSWORD}
      USERSERVICE_URL: ${USER_SERVICE_URL}
    depends_on:
      - orderservice_db
      - userservice
      - kafka
    networks:
      - orderservice_net
      - gateway_net
      - iw_kafka_net

  orderservice_db:
    image: postgres:latest
    container_name: orderservice_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${OS_DB_NAME}
      POSTGRES_USER: ${OS_DB_USERNAME}
      POSTGRES_PASSWORD: ${OS_DB_PASSWORD}
    volumes:
      - iw_order_service_db_data:/var/lib/postgresql/data
    networks:
      - orderservice_net



volumes:
  iw_user_service_db_data:
    name: iw_user_service_db_data
  iw_order_service_db_data:
    name: iw_order_service_db_data
  mongo_data:
    name: iw_payment_service_mongo_data

networks:
  keycloak_net:
    external: true
  userservice_net:
    driver: bridge
  orderservice_net:
    driver: bridge
  gateway_net:
    driver: bridge
  iw_kafka_net:
    driver: bridge
